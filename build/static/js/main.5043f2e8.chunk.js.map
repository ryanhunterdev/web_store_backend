{"version":3,"sources":["ModalContext.js","components/CartSummary.js","utility/useCheckout.js","components/Navbar.js","ProductsContext.js","components/ProductStock.js","utility/formatProductPrice.js","components/CardCartIcon.js","components/ProductCard.js","components/ProductsGrid.js","pages/Shop.js","pages/Product.js","components/CartItem.js","components/CartModal.js","pages/Result.js","App.js","reportWebVitals.js","index.js"],"names":["ModalContext","createContext","ModalProvider","props","useState","isModalOpen","setIsModalOpen","Provider","value","toggleCartModal","children","CartSummary","useShoppingCart","cartCount","formattedTotalPrice","useContext","className","onClick","style","cursor","useCheckout","redirectToCheckout","cartDetails","a","axios","post","then","res","data","catch","error","console","log","session","sessionId","id","Navbar","to","ProductsContext","ProductsProvider","allProducts","setAllProducts","useQuery","products","isLoading","allGenres","resultArr","filter","product","genre","map","forEach","array","includes","push","collateGenres","ProductStock","stock","color","formatProductPrice","formatCurrencyString","price","currency","language","navigator","CardCartIcon","addItem","quantity","handleAddItem","ProductCard","image","artist","name","type","urlLink","replaceAll","src","alt","ProductsGrid","Shop","displayedProducts","setDisplayedProducts","isMusic","setIsMusic","currentCategory","setCurrentCategory","currentSort","setCurrentSort","currentGenre","setCurrentGenre","useEffect","handleCategoryChange","slice","sort","b","category","fontSize","fontWeight","fontStyle","paddingBottom","width","_hover","textDecoration","length","Product","addQuantity","setAddQuantity","urlName","useParams","item","isError","message","year","condition","description","calculateStock","min","max","disabled","count","Number","href","similarItems","CartItem","cartItem","removeItem","incrementItem","decrementItem","formattedValue","CartModal","clearCart","cartItems","Object","keys","key","handleCheckout","Result","URLSearchParams","useLocation","search","get","total","amount_total","customer_details","email","App","mode","stripe","height","speed","gradient","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.5043f2e8.chunk.js","sourcesContent":["import { useState, createContext } from 'react'\n\n// context for other components to access - allows using the Provider\nexport const ModalContext = createContext()\n\nexport function ModalProvider(props) {\n\n    const [ isModalOpen, setIsModalOpen ] = useState(false)\n\n    const toggleCartModal = () => setIsModalOpen(!isModalOpen)\n\n    return <ModalContext.Provider value={{ toggleCartModal, isModalOpen, setIsModalOpen }}>\n        {props.children}\n    </ModalContext.Provider>\n}","import \"@fontsource/material-icons\";\nimport { useShoppingCart } from \"use-shopping-cart\";\nimport { useContext } from \"react\";\nimport { ModalContext } from \"../ModalContext\"\n\nexport default function CartSummary() {\n    const { cartCount, formattedTotalPrice } = useShoppingCart();\n    \n    const { toggleCartModal } = useContext(ModalContext)\n\n    return (\n        <>\n            <div \n            className=\"nav-cart\"\n            onClick={toggleCartModal}\n            style={{cursor: \"pointer\"}}\n            >\n                <div className=\"cart-amount-container\">\n                    <p className=\"cart-total\">\n                        { formattedTotalPrice }\n                    </p>\n                    <span className=\"material-icons\">\n                        shopping_cart\n                    </span>\n                    <p className=\"cart-amount\">\n                        ({ cartCount })\n                    </p>\n                </div>\n            </div>\n        </>\n    )\n}\n\n","import axios from \"axios\";\nimport { useShoppingCart } from \"use-shopping-cart\";\n\nexport default function useCheckout() {\n    const { redirectToCheckout, cartDetails } = useShoppingCart()\n\n    async function handleCheckout() {\n        const session = await axios\n            .post('/api/checkout-sessions', cartDetails)\n            .then((res) => res.data)\n            .catch((error) => {\n                console.log(\"Error During Checkout\", error);\n            })\n        \n            if (session) {\n                console.log(session);\n                redirectToCheckout({ sessionId: session.id })\n            }\n    }\n    return handleCheckout\n\n}","import { Link } from 'react-router-dom'\nimport CartSummary from './CartSummary'\nimport useCheckout from '../utility/useCheckout'\nimport { useShoppingCart } from 'use-shopping-cart'\nimport './Navbar.css'\nimport { useState } from 'react'\n \nconst Navbar = () => {\n\n    const handleCheckout = useCheckout()\n    const { cartCount } = useShoppingCart()\n\n\n    return ( \n        <header>\n            <h1 className=\"nav-header\">\n                <Link to=\"/shop\">rekkids n merch</Link>\n            </h1>\n          \n            <div className=\"nav-checkout\">\n                <CartSummary />\n            </div>\n        </header>\n    );\n}\n \nexport default Navbar;","import { useState, createContext } from 'react'\nimport axios from 'axios';\nimport { useQuery } from \"react-query\";\n\n\nexport const ProductsContext = createContext()\n\n\nexport function ProductsProvider(props) {\n\n    const [allProducts, setAllProducts] = useState([])\n\n    const { data, isLoading } = useQuery(\"Products\", () => axios('/api/products').then((res) => setAllProducts(res.data.products)))\n\n\n    function collateGenres(allProducts) {\n        let resultArr = [];\n        allProducts\n            .filter(product => product.genre)\n            .map(product => product.genre)\n            .forEach(array => {\n                array.forEach(genre => {\n                    if (!resultArr.includes(genre)) {\n                        resultArr.push(genre)\n                    }\n                })\n            })\n        return resultArr;\n    }\n\n    const allGenres = collateGenres(allProducts)\n\n   \n    return <ProductsContext.Provider value={{ allProducts, isLoading, allGenres }}>\n        {props.children}\n    </ProductsContext.Provider>\n}","\nconst ProductStock = (props) => {\n    const stock = props.stock\n    return  <p className={\"product-card-stock\"}\n    style={stock ? { color: 'inherit'} : {color: 'red'\n        }}\n    >\n    {stock ? 'In Stock' : 'Sold Out'}\n    </p> \n}\n\nexport default ProductStock;","import { formatCurrencyString } from \"use-shopping-cart\"\n\nexport default function formatProductPrice(product) {  \n    return formatCurrencyString({\n        value: product.price,\n        currency: product.currency,\n        language: navigator.language\n    })\n}","import { useShoppingCart } from \"use-shopping-cart\";\nimport { useContext } from \"react\";\nimport { ModalContext } from \"../ModalContext\"\n\nexport default function CardCartIcon(props) {\n\n    let { product } = props\n    let { stock, id } = product\n\n    const { addItem, cartDetails } = useShoppingCart()\n\n    const { setIsModalOpen } = useContext(ModalContext)\n\n    const handleAddItem = (product) => () => {\n        addItem(product)\n    }\n\n\n    \n    function calculateStock() {\n        if (cartDetails[id]) {\n            return stock - cartDetails[id].quantity\n        } else {\n            return stock\n        }\n    }\n\n    return (\n        <>\n        {calculateStock() > 0 && \n        \n            <span \n                className=\"material-icons card-cart\"\n                onClick={handleAddItem(product)}\n     \n                style={{cursor: \"pointer\"}}\n            >\n                add_shopping_cart\n            </span>\n        \n        }\n        </>\n        \n    )\n}","import './ProductCard.css'\nimport { Link } from 'react-router-dom'\nimport ProductStock from './ProductStock'\nimport formatCurrencyString from '../utility/formatProductPrice'\nimport \"@fontsource/material-icons\";\nimport CardCartIcon from './CardCartIcon'\n\n\nexport default function ProductCard(props) {\n\n    \n\n    const { product } = props;\n    const { \n        image, \n        artist, \n        name, \n        type, \n        stock\n \n    } = product;\n\n    const urlLink = '/shop/' + name.replaceAll(\" \", \"-\")\n\n    let price = formatCurrencyString(product)\n\n    return (\n        <div className=\"product-card\">\n\n            <Link to={urlLink}>\n                <img src={image} alt=\"\" className=\"product-card-img\" />\n            </Link>\n    \n          \n   \n            <div className=\"product-card-bottom\">\n                <div className=\"product-card-bottom-left\">\n                    <Link to={urlLink}>\n                        <h2 className=\"product-artist\">\n                        {artist ? artist : \"\"}\n                        </h2>\n                    </Link>\n                    <Link to={urlLink}>\n                        <h3 className=\"product-title\"> { name } </h3>\n                    </Link>\n                    <p className=\"product-card-type\">\n                            Type: { type }\n                    </p> \n                    <ProductStock stock={stock}/>\n                </div>\n\n                <div className=\"product-card-bottom-right\">\n                    <CardCartIcon product={product}/>\n                    <p className=\"product-card-price\">\n                        { price }\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n    \n}","import './ProductsGrid.css'\n\nimport ProductCard from './ProductCard'\n\nconst ProductsGrid = (props) => {\n    const { products, isLoading } = props;\n\n    if (isLoading) return <div><h1>LOADING...</h1></div>\n \n    return ( \n        <div className=\"products-grid\">\n            {products.map((product) => {\n\n                return <ProductCard product={product} key={product.id}/>\n            }\n            )}\n        </div> \n\n    );\n}\n \nexport default ProductsGrid;","import { useState } from 'react'\nimport { ProductsContext } from \"../ProductsContext\"\nimport { useContext, useEffect } from \"react\";\nimport {\n    Menu,\n    MenuButton,\n    MenuList,\n    MenuItem,\n    Flex, \n    Spacer \n} from \"@chakra-ui/react\"\n\n\nimport './Shop.css'\n\nimport ProductsGrid from '../components/ProductsGrid';\n\n\nexport default function Shop() {\n\n    const { allProducts, isLoading, allGenres } = useContext(ProductsContext)\n\n    let [displayedProducts, setDisplayedProducts] = useState(allProducts)\n\n\n    let [ isMusic, setIsMusic ] = useState(false)\n\n    let [ currentCategory, setCurrentCategory ] = useState(\"All\")\n\n    let [ currentSort, setCurrentSort ] = useState(\"Latest\")\n    \n    let [ currentGenre, setCurrentGenre ] = useState(\"Genre\")\n\n    useEffect(() => {\n        handleCategoryChange(currentCategory)\n    }, [currentCategory])\n\n    useEffect(() => {\n        handleSort(currentSort)\n    }, [currentSort])\n\n    useEffect(() => {\n        handleGenreChange(currentGenre)\n    }, [currentGenre])\n\n    if (isLoading) return <div><h1>LOADING...</h1></div>\n\n    function handleCategoryChange(value) {\n\n        if (value === \"Music\") {\n            setIsMusic(true)\n        } else {\n            setIsMusic(false)\n        }\n        if (value === 'All') {\n            setDisplayedProducts(allProducts) \n        } else {\n            console.log(value);\n            setDisplayedProducts(\n                allProducts.filter(product => \n                    product.category === value\n                )\n            )\n        }\n    }\n\n    function handleGenreChange() {\n        if (currentGenre === 'all') {\n            handleCategoryChange(\"Music\")\n        } else {\n\n            setDisplayedProducts(\n                allProducts.filter(product => product.category === \"Music\" && product.genre.includes(currentGenre))\n            )\n        }\n    }\n    \n    function handleSort(value) {\n\n        if (value === \"Lowest\") {\n            setDisplayedProducts(\n                displayedProducts.slice().sort((a, b) => a.price - b.price)\n                \n            )\n        } else if (value === \"Highest\") {\n            setDisplayedProducts(\n                displayedProducts.slice().sort((a, b) => b.price - a.price)\n            )\n        } else {\n            setDisplayedProducts(\n                displayedProducts.slice().sort((a, b) => a.id - b.id)\n            )\n        }\n    }\n\n\n\n    function updateState() {\n        setDisplayedProducts(displayedProducts.length ? displayedProducts.slice() : allProducts)\n    }\n\n\n    return (   \n        <div className=\"shop-wrapper\">\n\n            <h1 style={{\n                fontSize: \"2.5em\",\n                fontWeight: \"600\",\n                fontStyle: \"italic\",\n                paddingBottom: \".5em\"\n            \n            }}>Shop</h1>\n        \n            <Flex paddingBottom=\"1em\" width=\"350px\">\n                <p>Sort By:</p>\n                <Spacer />\n                    <Menu>\n                        <MenuButton\n                            _hover={{\n                                textDecoration: \"underline\"\n                            }}\n                        >{currentCategory}</MenuButton>\n                        <MenuList>\n                            <MenuItem \n                                onClick={() => setCurrentCategory(\"Music\")\n                                \n                                }\n                            >\n                                Music\n                            </MenuItem>\n                            <MenuItem \n                                onClick={() => setCurrentCategory(\"Merch\")}\n                            >\n                                Merch\n                            </MenuItem>\n                            <MenuItem \n                                onClick={() => setCurrentCategory(\"All\")}\n                            >\n                                All\n                            </MenuItem>\n                        </MenuList>\n                    </Menu>\n                    <Spacer />\n                    <Menu>\n                        <MenuButton \n                            onClick={updateState}\n                            _hover={{\n                                textDecoration: \"underline\"\n                            }}\n                            >\n                            {currentSort}\n                        </MenuButton>\n                        <MenuList>\n                            <MenuItem onClick={() => setCurrentSort(\"Highest\")}>\n                                Price: Highest\n                            </MenuItem>\n                            <MenuItem onClick={() => setCurrentSort(\"Lowest\")}>\n                                Price: Lowest\n                            </MenuItem>\n                            <MenuItem onClick={() => setCurrentSort(\"Latest\")}>\n                                Latest\n                            </MenuItem>\n                        </MenuList>\n                    </Menu>\n                    <Spacer />\n                    {isMusic && \n                        \n                        <Menu>\n                            <MenuButton _hover={{\n                                textDecoration: \"underline\"\n                            }}>\n                                {currentGenre}\n                            </MenuButton>\n                            <MenuList>\n                            {allGenres.map(genre => (\n                                <MenuItem onClick={() => setCurrentGenre(genre)} key={genre}>\n                                    {genre}\n                                </MenuItem>                       \n                            ))}\n                            <MenuItem onClick={() => setCurrentGenre('all')}>\n                                all\n                            </MenuItem>\n                            </MenuList>\n                        </Menu>\n                    }\n                </Flex>\n            <ProductsGrid \n                products={ displayedProducts.length ? displayedProducts : allProducts }\n                isLoading={ isLoading }        \n            />\n        </div> \n    );\n}\n ","import { useParams } from \"react-router-dom\"\nimport axios from 'axios';\nimport { useQuery } from \"react-query\";\nimport './Product.css'\nimport ProductStock from \"../components/ProductStock\"\nimport { useShoppingCart } from \"use-shopping-cart\";\nimport formatCurrencyString from '../utility/formatProductPrice.js'\nimport { useState } from 'react';\nimport ProductsGrid from '../components/ProductsGrid';\nimport { ProductsContext } from \"../ProductsContext\"\nimport { useContext } from \"react\";\n\n    \nexport default function Product () {\n\n    const { addItem, cartDetails } = useShoppingCart();\n\n    const { allProducts } = useContext(ProductsContext)\n\n    const [addQuantity, setAddQuantity] = useState(1)\n\n    const handleIncrement = () => {\n        \n        setAddQuantity(addQuantity + 1)\n    }\n    const handleDecrement = () => {\n        addQuantity > 1 && setAddQuantity(addQuantity - 1)\n    }\n    \n    let { item } = useParams()\n    const urlName = item\n\n    const { data: product, isLoading, isError, error } = useQuery([\"Product\", urlName], () => axios(`/api/products/${urlName}`).then((res) => res.data.product))\n\n    if (isLoading) return <div><h1>LOADING...</h1></div>\n    if (isError) return <div >{ error.message }</div>\n\n    const { \n        image, \n        name, \n        year, \n        condition,\n        artist, \n        stock, \n        description,\n        category,\n        genre,\n        id\n    } = product\n  \n    const isMusic = category === 'Music' ? true : false;\n\n    const similarItems = (allProducts) => {\n        return allProducts.filter(product => product.category === category && product.id !== id)\n    }\n    \n    const price = formatCurrencyString(product)\n\n    function calculateStock() {\n        if (cartDetails[id]) {\n            return stock - cartDetails[id].quantity\n        } else {\n            return stock\n        }\n    }\n\n    function handleAddItem() { \n        addItem(product, { count: Number(addQuantity) });\n        setAddQuantity(1)\n    }\n\n    const buttonMessage = () => {\n        if (!stock) {\n            return \"Out Of Stock\"\n        } else if (!calculateStock()) {\n            return \"Max Added\"\n        } else {\n            return \"Add To Cart\"\n        } \n    }\n\n    return ( \n        <> \n        <h1 style={{\n                fontSize: \"2.5em\",\n                fontWeight: \"600\",\n                fontStyle: \"italic\",\n                paddingBottom: \".5em\"\n            \n            }}>{name}</h1>\n        <div className=\"product-wrapper\">\n            <div className=\"product-left\">\n                <img src={image} alt={name} className=\"product-img\" />\n                { isMusic && \n                    <div className=\"product-year-condition\">\n                        <p className=\"product-info\"><span>Year:</span>\n                        { year }</p>\n                        <p className=\"product-info\"><span>Condition:</span>{ condition }</p>\n                    </div>\n                }\n            </div>\n            <div className=\"product-right\">\n                <h3 className=\"product-artist\">\n                    { artist }\n                </h3>\n                <div className=\"product-stock\">\n                   {stock > 0 ?? stock} <ProductStock stock={ stock }/> \n                </div>\n                <div className=\"incrementer-and-button\">\n                { calculateStock() > 0 && \n                    <div className=\"cart-item-quantity\">\n                        <button \n                        className=\"cart-quantity-button\"\n                        onClick={handleDecrement}\n                        >\n                        -\n                        </button>\n                        <div className=\"cart-quantity\">\n                        <input \n                            type=\"number\"\n                            value={addQuantity} \n                            \n                            min={1}\n                            max={calculateStock()}\n                            className=\"product-quantity\"\n                        />\n                        </div>\n                        <button \n                        className=\"cart-quantity-button\"\n                        onClick={handleIncrement}\n                        disabled={addQuantity >= calculateStock()}\n                        >\n                        +\n                        </button>\n                    </div>          \n                }\n                <button \n                    className=\"product-big-cart-button\"\n                    disabled={!calculateStock()}\n                    onClick={handleAddItem}\n                >\n                {stock > 0 && <p>${Number(price.slice(2)) * addQuantity}\n                </p>}    \n                {buttonMessage()}\n                </button>\n\n                </div>\n\n                <div className=\"product-description\">\n                    <p className=\"product-description\">\n                        { description }\n                    </p>\n                    {/* { isMusic && \n                        <button className=\"product-play\">\n                            play\n                        </button>\n                    } */}\n                </div>\n                { isMusic && \n                    <div className=\"genres\">\n                        <span style={{textDecoration: \"underline\"}}>Genres:</span> \n                    {\n                        genre.map(genre => \n                        <a href=\"https://test.com\" className=\"genre-link\" key={ genre }>{ genre }</a>\n                    )\n                    }\n                    </div>\n                }\n            </div>\n        </div>\n\n            <div className=\"similar-items\">\n                <h3>Similar items:</h3>\n                <ProductsGrid products={similarItems(allProducts)}/>\n            </div>\n        </>\n\n        \n     );\n}\n ","import formatProductPrice from \"../utility/formatProductPrice\";\nimport { useShoppingCart } from \"use-shopping-cart\"\nimport \"@fontsource/material-icons\";\n\nimport \"./CartItem.css\"\n\nexport default function CartItem({cartItem}) {\n\n  const { removeItem, incrementItem, decrementItem } = useShoppingCart()\n\n  console.log(cartItem);\n\n  const { image, name, stock, quantity, id, formattedValue } = cartItem\n\n  const price = formatProductPrice(cartItem)\n  \n    return (\n        <div className=\"cart-item\">\n          <div className=\"cart-img-container\">\n            <img src={image} alt={name} className=\"cart-img\" />\n          </div>\n          <div className=\"cart-item-info\">\n            <div className=\"cart-item-info-top\">\n              <div className=\"info-top-left\">\n                <h3 className=\"cart-item-name\">\n                  {name}\n                </h3>\n                <p className=\"cart-item-price\">\n                  {price} x {quantity}\n                </p>\n\n              </div>\n              <div className=\"info-top-right\">\n                <div \n                  className=\"remove-item\"\n                  onClick={() => removeItem(id)}\n                  >\n                    <span className=\"material-icons\">\n                    delete\n                    </span>\n                  </div>\n              </div>\n            </div>\n           \n            <div className=\"cart-item-bottom\">\n              <div className=\"cart-item-quantity\">\n                <button \n                  className=\"cart-quantity-button\"\n                  onClick={() => decrementItem(id)}>\n                  -\n                </button>\n                <div className=\"cart-quantity\">\n                  {quantity}\n                </div>\n                <button \n                  className=\"cart-quantity-button\"\n                  onClick={() => incrementItem(id)}\n                  disabled={quantity >= stock}\n                  >\n                  +\n                </button>\n              </div>\n              <div>\n                <p className=\"item-total\">{formattedValue.slice(1)}</p>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n    )\n}","import { useShoppingCart } from 'use-shopping-cart';\nimport CartItem from \"./CartItem\"\nimport \"./CartModal.css\"\nimport { useContext } from \"react\";\nimport { ModalContext } from \"../ModalContext\"\nimport useCheckout from '../utility/useCheckout'\n\n\n\nexport default function CartModal() {\n\n    const { cartDetails, clearCart, formattedTotalPrice } = useShoppingCart();\n\n    const { toggleCartModal } = useContext(ModalContext)\n\n    const cartItems = Object.keys(cartDetails).map(key => cartDetails[key])\n\n    const handleCheckout = useCheckout()\n\n    return (\n        \n        <div className=\"cart-modal-wrap\">\n            <div \n                className=\"cart-modal-overlay\"\n                onClick={toggleCartModal}\n            >\n            </div>\n            <div className=\"cart-modal\">\n                <div className=\"cart-modal-top\">\n                    <h2 className=\"cart-modal-heading\">Your Cart</h2>\n                    <span \n                        className=\"close-modal\"\n                        onClick={toggleCartModal}\n                        style={{ \n                            cursor: \"pointer\",\n                            fontWeight: \"600\"\n                            }}\n                    >X\n                    </span>\n                </div>\n                \n                <div className=\"cart-item-grid\">\n                    {cartItems.map(cartItem => (\n                        <CartItem key={cartItem.id} cartItem={cartItem} />\n                    ))}\n                </div>\n                <div className=\"cart-modal-bottom\">\n                    <div className=\"cart-modal-subtotal-div\">\n                        <p>\n                            Subtotal:\n                        </p>\n                        <p className=\"cart-modal-subtotal\">\n                            {formattedTotalPrice}\n                        </p>\n                    </div>\n                    <div className=\"bottom-buttons\">\n                        <button \n                            className=\"cart-modal-button\"\n                            onClick={handleCheckout}\n                        >\n                            Checkout\n                        </button>\n                        <button className=\"cart-modal-button\" onClick={toggleCartModal}>\n                            Continue Shopping\n                        </button>\n                        <button \n                            className=\"cart-modal-button\"\n                            onClick={clearCart}\n                            style={{cursor: \"pointer\"}}\n                            >\n                            Clear Cart\n                        </button>\n                    </div>\n                </div>\n            </div>\n           \n        </div>\n\n    )\n\n\n\n}\n","import axios from \"axios\";\n\nimport { useQuery } from \"react-query\";\nimport { useLocation } from \"react-router-dom\";\nimport { formatCurrencyString, useShoppingCart } from \"use-shopping-cart\"\n \n\nfunction useQueryString() {\n    return new URLSearchParams(useLocation().search)\n}\n\n\nconst Result = () => {\n    const { clearCart, cartCount } = useShoppingCart();\n\n    \n\n    const queryString = useQueryString()\n    const sessionId = queryString.get('session_id')\n    \n    const { data, isLoading, isError } = useQuery('Result', () => sessionId ? axios(`/api/checkout-sessions/${sessionId}`).then(res => res.data) : null)\n\n    if (data && cartCount > 0) {\n        clearCart()\n    }\n\n    if (isLoading) return <div>Loading...</div>\n    if (!data && !isLoading) return <div>No purchase found.</div>\n    if (isError) return <div>Error loading result page</div>\n \n\n    const total = formatCurrencyString({\n        value: data.amount_total,\n        currency: data.currency,\n        language: navigator.language\n    })\n\n    return ( \n        <div>\n            <h2>Thanks for your purchase! Your order is being processed.</h2>\n            <p>Total: { total }</p>\n            <p>Email: { data.customer_details.email }</p>\n        </div>\n     );\n}\n \nexport default Result;","import './App.css';\nimport { Switch, Route } from \"react-router-dom\";\nimport { loadStripe } from '@stripe/stripe-js' \nimport { CartProvider } from \"use-shopping-cart\";\nimport { useContext } from \"react\";\nimport { ModalContext } from \"./ModalContext\"\nimport Marquee from \"react-fast-marquee\";\n\n\nimport Navbar from \"./components/Navbar\"\n\nimport Shop from \"./pages/Shop\" \nimport Product from \"./pages/Product\"\nimport CartModal from \"./components/CartModal\"\nimport Result from \"./pages/Result\"\n\nconst stripeKey = 'pk_test_51JEYLzI5axcIykJko2VXlodil22iVSjZ58IFvODU039VdHUKC9MxGLPLfZP9dn1aagi131H5BDoNOJsKuj2AvgJj00KNnHunqn'\n\nfunction App() {\n\n  const { isModalOpen } = useContext(ModalContext)\n\n  return (\n    <div className=\"App\">\n\n      <CartProvider \n        mode=\"checkout-session\"\n        stripe={stripeKey}\n        currency=\"AUD\"\n        // cartMode=\"client-only\"\n        >\n        \n        {isModalOpen && <CartModal /> }\n        <Navbar /> \n        <main>\n        <Marquee \n          style={{\n            height: \"2em\",\n            fontStyle: \"italic\",\n            fontSize: \"2em\"\n            }}\n          speed=\"50\"\n          gradient={false}\n        >\n           FREE SHIPPING ON ORDERS OVER $100!\n        </Marquee>\n          <Switch>\n            <Route exact path=\"/\">\n              <Shop />\n            </Route>\n            <Route path=\"/shop/:item\">\n              <Product />\n            </Route>\n            <Route path=\"/shop\">\n              <Shop />\n            </Route>\n            <Route path=\"/result\">\n              <Result />\n            </Route>\n          </Switch>\n        </main>\n        </CartProvider>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { QueryClientProvider, QueryClient } from  \"react-query\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ModalProvider } from './ModalContext';\nimport { ProductsProvider } from './ProductsContext';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <Router>\n      <ChakraProvider>\n          <ModalProvider>\n            <ProductsProvider>\n            <App />\n            </ProductsProvider>\n          </ModalProvider>\n        </ChakraProvider>\n      </Router>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}