{"version":3,"sources":["ModalContext.js","components/CartSummary.js","components/Navbar.js","ProductsContext.js","components/ProductStock.js","utility/formatProductPrice.js","components/CardCartIcon.js","components/ProductCard.js","components/ProductsGrid.js","components/DropDownButton.js","pages/Shop.js","pages/Product.js","components/CartItem.js","components/CartModal.js","utility/useCheckout.js","pages/Result.js","App.js","reportWebVitals.js","index.js"],"names":["ModalContext","createContext","ModalProvider","props","useState","isModalOpen","setIsModalOpen","Provider","value","toggleCartModal","children","CartSummary","useShoppingCart","cartCount","formattedTotalPrice","useContext","className","onClick","style","cursor","Navbar","to","fontWeight","ProductsContext","ProductsProvider","allProducts","setAllProducts","useQuery","axios","then","res","data","products","isLoading","allGenres","resultArr","filter","product","genre","map","forEach","array","includes","push","collateGenres","ProductStock","stock","color","formatProductPrice","formatCurrencyString","price","currency","language","navigator","CardCartIcon","id","addItem","cartDetails","quantity","setTimeout","handleAddItem","ProductCard","image","artist","name","type","urlLink","replaceAll","src","alt","ProductsGrid","DropDownButton","content","display","flexDirection","class","Shop","displayedProducts","setDisplayedProducts","isMusic","setIsMusic","currentCategory","setCurrentCategory","currentSort","setCurrentSort","currentGenre","setCurrentGenre","useEffect","handleCategoryChange","slice","sort","a","b","category","document","title","console","log","fontSize","fontStyle","paddingBottom","width","border","borderRadius","padding","length","Product","addQuantity","setAddQuantity","isLargeImageUp","setisLargeImageUp","toggleLargeImage","urlName","useParams","item","isError","error","message","year","condition","description","calculateStock","min","max","disabled","count","Number","textDecoration","similarItems","CartItem","cartItem","itemRemoved","itemUpdated","removeItem","incrementItem","decrementItem","formattedValue","handleEditItem","intention","toast","CartModal","clearCart","cartItems","Object","keys","key","handleCheckout","redirectToCheckout","post","catch","session","sessionId","useCheckout","toastOptions","duration","containerStyle","position","top","right","Result","URLSearchParams","useLocation","search","get","total","amount_total","customer_details","email","App","mode","stripe","height","zIndex","speed","gradient","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","getElementById"],"mappings":"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","file":"static/js/main.2907b170.chunk.js","sourcesContent":["import { useState, createContext } from 'react'\n\n// context for other components to access - allows using the Provider\nexport const ModalContext = createContext()\n\nexport function ModalProvider(props) {\n\n    const [ isModalOpen, setIsModalOpen ] = useState(false)\n\n    const toggleCartModal = () => setIsModalOpen(!isModalOpen)\n\n    return <ModalContext.Provider value={{ toggleCartModal, isModalOpen, setIsModalOpen }}>\n        {props.children}\n    </ModalContext.Provider>\n}","import \"@fontsource/material-icons\";\nimport { useShoppingCart } from \"use-shopping-cart\";\nimport { useContext } from \"react\";\nimport { ModalContext } from \"../ModalContext\"\n\nexport default function CartSummary() {\n    const { cartCount, formattedTotalPrice } = useShoppingCart();\n    \n    const { toggleCartModal } = useContext(ModalContext)\n\n    return (\n        <>\n            <div \n            className=\"nav-cart\"\n            onClick={toggleCartModal}\n            style={{cursor: \"pointer\"}}\n            >\n                <div className=\"cart-amount-container\">\n                    <p className=\"cart-total\">\n                        { formattedTotalPrice }\n                    </p>\n                    <span className=\"material-icons\">\n                        shopping_cart\n                    </span>\n                    <p className=\"cart-amount\">\n                        ({ cartCount })\n                    </p>\n                </div>\n            </div>\n        </>\n    )\n}\n\n","import { Link } from 'react-router-dom'\nimport CartSummary from './CartSummary'\nimport './Navbar.css'\n\n \nconst Navbar = () => {\n\n\n    return ( \n        <header>\n                <h1 className=\"nav-header\">\n                    <Link to=\"/shop\" style={{fontWeight: 600}}>rekkids n merch</Link>\n                </h1>\n            \n                <div className=\"nav-checkout\">\n                    <CartSummary />\n                </div>\n        </header>\n    );\n}\n \nexport default Navbar;","import { useState, createContext } from 'react'\nimport axios from 'axios';\nimport { useQuery } from \"react-query\";\n\n\nexport const ProductsContext = createContext()\n\n\nexport function ProductsProvider(props) {\n\n    const [allProducts, setAllProducts] = useState([])\n\n    const { data, isLoading } = useQuery(\"Products\", () => axios('/api/products').then((res) => setAllProducts(res.data.products)))\n\n\n    function collateGenres(allProducts) {\n        let resultArr = [];\n        allProducts\n            .filter(product => product.genre)\n            .map(product => product.genre)\n            .forEach(array => {\n                array.forEach(genre => {\n                    if (!resultArr.includes(genre)) {\n                        resultArr.push(genre)\n                    }\n                })\n            })\n        return resultArr;\n    }\n\n    const allGenres = collateGenres(allProducts)\n\n   \n    return <ProductsContext.Provider value={{ allProducts, isLoading, allGenres }}>\n        {props.children}\n    </ProductsContext.Provider>\n}","\nconst ProductStock = (props) => {\n    const stock = props.stock\n    return  <p className={\"product-card-stock\"}\n    style={stock ? { color: 'inherit'} : {color: 'red'\n        }}\n    >\n    {stock ? 'In Stock' : 'Sold Out'}\n    </p> \n}\n\nexport default ProductStock;","import { formatCurrencyString } from \"use-shopping-cart\"\n\nexport default function formatProductPrice(product) {  \n    return formatCurrencyString({\n        value: product.price,\n        currency: product.currency,\n        language: navigator.language\n    })\n}","import { useShoppingCart } from \"use-shopping-cart\";\nimport { useContext } from \"react\";\nimport { ModalContext } from \"../ModalContext\"\n\nexport default function CardCartIcon(props) {\n\n    let { product } = props\n    let { stock, id } = product\n\n    const { addItem, cartDetails } = useShoppingCart()\n\n    const { setIsModalOpen } = useContext(ModalContext)\n\n    const handleAddItem = (product) => () => {\n        addItem(product)\n        setTimeout(() => setIsModalOpen(true), 100)\n\n    }\n\n    function calculateStock() {\n        if (cartDetails[id]) {\n            return stock - cartDetails[id].quantity\n        } else {\n            return stock\n        }\n    }\n\n    return (\n        <>\n        {calculateStock() > 0 && \n        \n            <span \n                className=\"material-icons card-cart\"\n                onClick={handleAddItem(product)}\n     \n                style={{cursor: \"pointer\"}}\n            >\n                add_shopping_cart\n            </span>\n        \n        }\n        </>\n        \n    )\n}","import './ProductCard.css'\nimport { Link } from 'react-router-dom'\nimport ProductStock from './ProductStock'\nimport formatCurrencyString from '../utility/formatProductPrice'\nimport \"@fontsource/material-icons\";\nimport CardCartIcon from './CardCartIcon'\n\n\nexport default function ProductCard(props) {\n\n    \n\n    const { product } = props;\n    const { \n        image, \n        artist, \n        name, \n        type, \n        stock\n \n    } = product;\n\n    const urlLink = '/shop/' + name.replaceAll(\" \", \"-\")\n\n    let price = formatCurrencyString(product)\n\n    return (\n        <div className=\"product-card\">\n\n            <Link to={urlLink}>\n                <img src={image} alt=\"\" className=\"product-card-img\" />\n            </Link>\n    \n          \n   \n            <div className=\"product-card-bottom\">\n                <div className=\"product-card-bottom-left\">\n                    <Link to={urlLink}>\n                        <h2 className=\"product-artist\">\n                        {artist ? artist : \"\"}\n                        </h2>\n                    </Link>\n                    <Link to={urlLink}>\n                        <h3 className=\"product-title\"> { name } </h3>\n                    </Link>\n                    <p className=\"product-card-type\">\n                            Type: { type }\n                    </p> \n                    <ProductStock stock={stock}/>\n                </div>\n\n                <div className=\"product-card-bottom-right\">\n                    <CardCartIcon product={product}/>\n                    <p className=\"product-card-price\">\n                        { price }\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n    \n}","import './ProductsGrid.css'\n\nimport ProductCard from './ProductCard'\n\nconst ProductsGrid = (props) => {\n    const { products, isLoading } = props;\n\n    if (isLoading) return <div><h1>LOADING...</h1></div>\n \n    return ( \n        <div className=\"products-grid\">\n            {products.map((product) => {\n\n                return <ProductCard product={product} key={product.id}/>\n            }\n            )}\n        </div> \n\n    );\n}\n \nexport default ProductsGrid;","import { MenuButton } from \"@chakra-ui/react\"\n\nconst DropDownButton = (props) => {\n\n    const { content } = props;\n\n    return ( \n        <MenuButton\n            style={{\n                display: \"flex\",\n                flexDirection: \"row\"\n            }}\n        >{content}\n            <span class=\"material-icons\">\n                expand_more\n            </span>\n        </MenuButton>\n);\n}\n \nexport default DropDownButton;","import { useState } from 'react'\nimport { ProductsContext } from \"../ProductsContext\"\nimport { useContext, useEffect } from \"react\";\nimport {\n    Menu,\n    MenuButton,\n    MenuList,\n    MenuItem,\n    Flex, \n    Spacer \n} from \"@chakra-ui/react\"\nimport \"@fontsource/material-icons\";\n\nimport './Shop.css'\n\nimport ProductsGrid from '../components/ProductsGrid';\nimport DropDownButton from '../components/DropDownButton';\n\n\nexport default function Shop() {\n\n    const { allProducts, isLoading, allGenres } = useContext(ProductsContext)\n\n    let [displayedProducts, setDisplayedProducts] = useState(allProducts)\n\n\n    let [ isMusic, setIsMusic ] = useState(false)\n\n    let [ currentCategory, setCurrentCategory ] = useState(\"All\")\n\n    let [ currentSort, setCurrentSort ] = useState(\"Latest\")\n    \n    let [ currentGenre, setCurrentGenre ] = useState(\"Genre\")\n\n    useEffect(() => {\n        handleCategoryChange(currentCategory)\n    }, [currentCategory])\n\n    useEffect(() => {\n        handleSort(currentSort)\n    }, [currentSort])\n\n    useEffect(() => {\n        handleGenreChange(currentGenre)\n    }, [currentGenre])\n\n    useEffect(() => document.title = 'shop - rekkids n merch')\n\n    if (isLoading) return <div><h1>LOADING...</h1></div>\n\n    function handleCategoryChange(value) {\n\n        if (value === \"Music\") {\n            setIsMusic(true)\n        } else {\n            setIsMusic(false)\n        }\n        if (value === 'All') {\n            setDisplayedProducts(allProducts) \n        } else {\n            console.log(value);\n            setDisplayedProducts(\n                allProducts.filter(product => \n                    product.category === value\n                )\n            )\n        }\n    }\n\n    function handleGenreChange() {\n        if (currentGenre === 'all') {\n            handleCategoryChange(\"Music\")\n        } else {\n\n            setDisplayedProducts(\n                allProducts.filter(product => product.category === \"Music\" && product.genre.includes(currentGenre))\n            )\n        }\n    }\n    \n    function handleSort(value) {\n\n        if (value === \"Lowest\") {\n            setDisplayedProducts(\n                displayedProducts.slice().sort((a, b) => a.price - b.price)\n                \n            )\n        } else if (value === \"Highest\") {\n            setDisplayedProducts(\n                displayedProducts.slice().sort((a, b) => b.price - a.price)\n            )\n        } else {\n            setDisplayedProducts(\n                displayedProducts.slice().sort((a, b) => a.id - b.id)\n            )\n        }\n    }\n\n\n\n    function updateState() {\n        setDisplayedProducts(displayedProducts.length ? displayedProducts.slice() : allProducts)\n    }\n\n\n    return (   \n        <div className=\"shop-wrapper\">\n\n            <h1 style={{\n                fontSize: \"2.5em\",\n                fontWeight: \"600\",\n                fontStyle: \"italic\",\n                paddingBottom: \".5em\"\n            \n            }}>Shop</h1>\n        \n            <Flex paddingBottom=\"1em\" width=\"350px\">\n                <p>Sort By:</p>\n                <Spacer />\n                    <Menu>\n                        <DropDownButton content={currentCategory}/>\n                        <MenuList\n                            style={{\n                            border: \"1px solid black\",\n                            borderRadius: \"0\",\n                            padding: \"0\"\n                        }} >\n                            <MenuItem \n                                onClick={() => setCurrentCategory(\"Music\")\n                                }\n                            >\n                                Music\n                            </MenuItem>\n                            <MenuItem \n                                onClick={() => setCurrentCategory(\"Merch\")}\n                            >\n                                Merch\n                            </MenuItem>\n                            <MenuItem \n                                onClick={() => setCurrentCategory(\"All\")}\n                            >\n                                All\n                            </MenuItem>\n                        </MenuList>\n                    </Menu>\n                    <Spacer />\n                    <Menu>\n                        <DropDownButton content={currentSort}/>\n                        <MenuList\n                            style={{\n                            border: \"1px solid black\",\n                            borderRadius: \"0\",\n                            padding: \"0\"\n                        }} >\n                            <MenuItem onClick={() => setCurrentSort(\"Highest\")}>\n                                Price: Highest\n                            </MenuItem>\n                            <MenuItem onClick={() => setCurrentSort(\"Lowest\")}>\n                                Price: Lowest\n                            </MenuItem>\n                            <MenuItem onClick={() => setCurrentSort(\"Latest\")}>\n                                Latest\n                            </MenuItem>\n                        </MenuList>\n                    </Menu>\n                    <Spacer />\n                    {isMusic && \n                        \n                        <Menu>\n                            <DropDownButton content={currentGenre}/>\n                            <MenuList\n                            style={{\n                            border: \"1px solid black\",\n                            borderRadius: \"0\",\n                            padding: \"0\"\n                        }} >\n                            {allGenres.map(genre => (\n                                <MenuItem onClick={() => setCurrentGenre(genre)} key={genre}>\n                                    {genre}\n                                </MenuItem>                       \n                            ))}\n                            <MenuItem onClick={() => setCurrentGenre('all')}>\n                                all\n                            </MenuItem>\n                            </MenuList>\n                        </Menu>\n                    }\n                </Flex>\n            <ProductsGrid \n                products={ displayedProducts.length ? displayedProducts : allProducts }\n                isLoading={ isLoading }        \n            />\n        </div> \n    );\n}\n ","import { useParams } from \"react-router-dom\"\nimport axios from 'axios';\nimport { useQuery } from \"react-query\";\nimport './Product.css'\nimport ProductStock from \"../components/ProductStock\"\nimport { useShoppingCart } from \"use-shopping-cart\";\nimport formatCurrencyString from '../utility/formatProductPrice.js'\nimport { useState, useEffect } from 'react';\nimport ProductsGrid from '../components/ProductsGrid';\nimport { ProductsContext } from \"../ProductsContext\"\nimport { useContext } from \"react\";\nimport { ModalContext } from \"../ModalContext\"\n\n    \nexport default function Product () {\n\n    const { addItem, cartDetails } = useShoppingCart();\n\n    const { allProducts } = useContext(ProductsContext)\n\n    const [addQuantity, setAddQuantity] = useState(1)\n\n    const [isLargeImageUp, setisLargeImageUp] = useState(false)\n\n    const { setIsModalOpen } = useContext(ModalContext)\n\n    const handleIncrement = () => {\n        \n        setAddQuantity(addQuantity + 1)\n    }\n    const handleDecrement = () => {\n        addQuantity > 1 && setAddQuantity(addQuantity - 1)\n    }\n    \n    const toggleLargeImage = () => {setisLargeImageUp(!isLargeImageUp)}\n\n    let { item: urlName } = useParams()\n\n    useEffect(() => document.title = `${urlName.replaceAll(\"-\", \" \")} - rekkids n merch`)\n\n    const { data: product, isLoading, isError, error } = useQuery([\"Product\", urlName], () => axios(`/api/products/${urlName}`).then((res) => res.data.product))\n\n    if (isLoading) return <div><h1>LOADING...</h1></div>\n    if (isError) return <div >{ error.message }</div>\n\n    const { \n        image, \n        name, \n        year, \n        condition,\n        artist, \n        stock, \n        description,\n        category,\n        genre,\n        id\n    } = product\n  \n    const isMusic = category === 'Music' ? true : false;\n\n    const similarItems = (allProducts) => {\n        return allProducts.filter(product => product.category === category && product.id !== id)\n    }\n    \n    const price = formatCurrencyString(product)\n\n    function calculateStock() {\n        if (cartDetails[id]) {\n            return stock - cartDetails[id].quantity\n        } else {\n            return stock\n        }\n    }\n\n    function handleAddItem() { \n        addItem(product, { count: Number(addQuantity) });\n        setTimeout(() => setIsModalOpen(true), 100)\n        setAddQuantity(1)\n    }\n\n    const buttonMessage = () => {\n        if (!stock) {\n            return \"Out Of Stock\"\n        } else if (!calculateStock()) {\n            return \"Max Added\"\n        } else {\n            return \"Add To Cart\"\n        } \n    }\n\n    return ( \n        <div className=\"product-page\"> \n        {isLargeImageUp && \n            <div className=\"image-large-overlay\" onClick ={toggleLargeImage}>\n                <div className=\"image-large-modal\">\n                    <p onClick ={toggleLargeImage}>x</p>\n                    <img src={image} alt={name} className=\"large-img\" />\n                </div>\n            </div>       \n        }\n        <h1 style={{\n                fontSize: \"2.5em\",\n                fontWeight: \"600\",\n                fontStyle: \"italic\",\n                paddingBottom: \".5em\"\n            \n            }}>{name}</h1>\n        <div className=\"product-wrapper\">\n            <div className=\"product-left\">\n                <img \n                    src={image} \n                    alt={name} \n                    className=\"product-img\" \n                    onClick ={toggleLargeImage}\n                    />\n                { isMusic && \n                    <div className=\"product-year-condition\">\n                        <p className=\"product-info\"><span>Year:</span>\n                        { year }</p>\n                        <p className=\"product-info\"><span>Condition:</span>{ condition }</p>\n                    </div>\n                }\n            </div>\n            <div className=\"product-right\">\n                <h3 className=\"product-artist\">\n                    { artist }\n                </h3>\n                <div className=\"product-stock\">\n                   {stock > 0 ?? stock} <ProductStock stock={ stock }/> \n                </div>\n                <div className=\"incrementer-and-button\">\n                { calculateStock() > 0 && \n                    <div className=\"cart-item-quantity\">\n                        <button \n                        className=\"cart-quantity-button\"\n                        onClick={handleDecrement}\n                        >\n                        -\n                        </button>\n                        <div className=\"cart-quantity\">\n                        <input \n                            type=\"number\"\n                            value={addQuantity} \n                            \n                            min={1}\n                            max={calculateStock()}\n                            className=\"product-quantity\"\n                        />\n                        </div>\n                        <button \n                        className=\"cart-quantity-button\"\n                        onClick={handleIncrement}\n                        disabled={addQuantity >= calculateStock()}\n                        >\n                        +\n                        </button>\n                    </div>          \n                }\n                <button \n                    className=\"product-big-cart-button\"\n                    disabled={!calculateStock()}\n                    onClick={handleAddItem}\n                >\n                {stock > 0 && <p>${Number(price.slice(2)) * addQuantity}\n                </p>}    \n                {buttonMessage()}\n                </button>\n\n                </div>\n\n                <div className=\"product-description\">\n                    <p className=\"product-description\">\n                        { description }\n                    </p>\n                    {/* { isMusic && \n                        <button className=\"product-play\">\n                            play\n                        </button>\n                    } */}\n                </div>\n                { isMusic && \n                    <div className=\"genres\">\n                        <span style={{textDecoration: \"underline\"}}>Genres:</span> \n                    {\n                        genre.map(genre => \n                        <p style={{ display: 'inline'}}className=\"genre-link\" key={ genre }>{ genre }</p>\n                    )\n                    }\n                    </div>\n                }\n            </div>\n        </div>\n\n            <div className=\"similar-items\">\n                <h3 style={{ fontWeight: '500'}}>Similar items:</h3>\n                <ProductsGrid products={similarItems(allProducts)}/>\n            </div>\n        </div>\n\n        \n     );\n}\n ","import formatProductPrice from \"../utility/formatProductPrice\";\nimport { useShoppingCart } from \"use-shopping-cart\"\nimport \"@fontsource/material-icons\";\n\nimport \"./CartItem.css\"\n\nexport default function CartItem({cartItem, itemRemoved, itemUpdated}) {\n\n  const { removeItem, incrementItem, decrementItem } = useShoppingCart()\n\n  const { image, name, stock, quantity, id, formattedValue } = cartItem\n\n  function handleEditItem(intention, id) {\n    if (intention === 'remove') {\n      removeItem(id)\n      itemRemoved()\n    } else if (intention === 'increment') {\n      incrementItem(id)\n      itemUpdated()\n    } else {\n      decrementItem(id)\n      itemUpdated()\n    }\n  }\n\n  const price = formatProductPrice(cartItem)\n  \n    return (\n        <div className=\"cart-item\">\n          <div className=\"cart-img-container\">\n            <img src={image} alt={name} className=\"cart-img\" />\n          </div>\n          <div className=\"cart-item-info\">\n            <div className=\"cart-item-info-top\">\n              <div className=\"info-top-left\">\n                <h3 className=\"cart-item-name\">\n                  {name}\n                </h3>\n                <p className=\"cart-item-price\">\n                  {price} x {quantity}\n                </p>\n\n              </div>\n              <div className=\"info-top-right\">\n                <div \n                  className=\"remove-item\"\n                  onClick={() => handleEditItem('remove', id)}\n                  >\n                    <span className=\"material-icons\">\n                    delete\n                    </span>\n                  </div>\n              </div>\n            </div>\n           \n            <div className=\"cart-item-bottom\">\n              <div className=\"cart-item-quantity\">\n                <button \n                  className=\"cart-quantity-button\"\n                  onClick={() => handleEditItem('decrement', id)}>\n                  -\n                </button>\n                <div className=\"cart-quantity\">\n                  {quantity}\n                </div>\n                <button \n                  className=\"cart-quantity-button\"\n                  onClick={() => handleEditItem('increment', id)}\n                  disabled={quantity >= stock}\n                  >\n                  +\n                </button>\n              </div>\n              <div>\n                <p className=\"item-total\">{formattedValue.slice(1)}</p>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n    )\n}","import { useShoppingCart } from 'use-shopping-cart';\nimport CartItem from \"./CartItem\"\nimport \"./CartModal.css\"\nimport { useContext } from \"react\";\nimport { ModalContext } from \"../ModalContext\"\nimport useCheckout from '../utility/useCheckout'\nimport toast, { Toaster } from 'react-hot-toast';\n\nconst itemUpdated = () => toast('Item Updated')\nconst itemRemoved = () => toast('Item Removed')\n\nexport default function CartModal(props) {\n\n    const { cartDetails, clearCart, formattedTotalPrice } = useShoppingCart();\n\n    const { toggleCartModal, isModalOpen } = useContext(ModalContext)\n\n    const cartItems = Object.keys(cartDetails).map(key => cartDetails[key])\n\n    const handleCheckout = useCheckout()\n\n    console.log(props);\n\n    return (\n        \n        <div className=\"cart-modal-wrap\">\n            <div \n                className=\"cart-modal-overlay\"\n                onClick={toggleCartModal}\n            >\n            </div>\n            <div \n                className={\"cart-modal\"}>\n                <div className=\"cart-modal-top\">\n                    <Toaster \n                        toastOptions={{\n                        className: '',\n                        duration: 1000,\n                        style: { \n                            border: '1px solid black',\n                            borderRadius: '0'\n                            }\n                        }} \n                        containerStyle={{\n                            position: 'absolute',\n                            top: 0,\n                            right: 0,\n                        }}\n\n                    />\n                    <h2 className=\"cart-modal-heading\">Your Cart</h2>\n                    <span \n                        className=\"close-modal\"\n                        onClick={toggleCartModal}\n                        style={{ \n                            cursor: \"pointer\",\n                            fontWeight: \"600\"\n                            }}\n                    >X\n                    </span>\n                </div>\n                \n                <div className=\"cart-item-grid\">\n                    {cartItems.map(cartItem => (\n                        <CartItem \n                            key={cartItem.id} \n                            cartItem={cartItem}\n                            itemUpdated={itemUpdated}\n                            itemRemoved={itemRemoved}\n                             />\n                    ))}\n                </div>\n                <div className=\"cart-modal-bottom\">\n                    <div className=\"cart-modal-subtotal-div\">\n                        <p>\n                            Subtotal:\n                        </p>\n                        <p className=\"cart-modal-subtotal\">\n                            {formattedTotalPrice}\n                        </p>\n                    </div>\n                    <div className=\"bottom-buttons\">\n                        <button \n                            className=\"cart-modal-button\"\n                            onClick={handleCheckout}\n                        >\n                            Checkout\n                        </button>\n                        <button className=\"cart-modal-button\" onClick={toggleCartModal}>\n                            Continue Shopping\n                        </button>\n                        <button \n                            className=\"cart-modal-button\"\n                            onClick={clearCart}\n                            style={{cursor: \"pointer\"}}\n                            >\n                            Clear Cart\n                        </button>\n                    </div>\n                </div>\n            </div>\n           \n        </div>\n\n    )\n\n\n\n}\n","import axios from \"axios\";\nimport { useShoppingCart } from \"use-shopping-cart\";\n\nexport default function useCheckout() {\n    const { redirectToCheckout, cartDetails } = useShoppingCart()\n\n    async function handleCheckout() {\n        const session = await axios\n            .post('/api/checkout-sessions', cartDetails)\n            .then((res) => res.data)\n            .catch((error) => {\n                console.log(\"Error During Checkout\", error);\n            })\n        \n            if (session) {\n                console.log(session);\n                redirectToCheckout({ sessionId: session.id })\n            }\n    }\n    return handleCheckout\n\n}","import axios from \"axios\";\n\nimport { useQuery } from \"react-query\";\nimport { useLocation } from \"react-router-dom\";\nimport { formatCurrencyString, useShoppingCart } from \"use-shopping-cart\"\n \n\nfunction useQueryString() {\n    return new URLSearchParams(useLocation().search)\n}\n\n\nconst Result = () => {\n    const { clearCart, cartCount } = useShoppingCart();\n\n    \n\n    const queryString = useQueryString()\n    const sessionId = queryString.get('session_id')\n    \n    const { data, isLoading, isError } = useQuery('Result', () => sessionId ? axios(`/api/checkout-sessions/${sessionId}`).then(res => res.data) : null)\n\n    if (data && cartCount > 0) {\n        clearCart()\n    }\n\n    if (isLoading) return <div>Loading...</div>\n    if (!data && !isLoading) return <div>No purchase found.</div>\n    if (isError) return <div>Error loading result page</div>\n \n\n    const total = formatCurrencyString({\n        value: data.amount_total,\n        currency: data.currency,\n        language: navigator.language\n    })\n\n    return ( \n        <div>\n            <h2>Thanks for your purchase! Your order is being processed.</h2>\n            <p>Total: { total }</p>\n            <p>Email: { data.customer_details.email }</p>\n        </div>\n     );\n}\n \nexport default Result;","import \"@fontsource/work-sans\"\nimport './App.css';\nimport { Switch, Route } from \"react-router-dom\";\nimport { CartProvider } from \"use-shopping-cart\";\nimport { useContext } from \"react\";\nimport { ModalContext } from \"./ModalContext\"\nimport Marquee from \"react-fast-marquee\";\n\n\n\nimport Navbar from \"./components/Navbar\"\n\nimport Shop from \"./pages/Shop\" \nimport Product from \"./pages/Product\"\nimport CartModal from \"./components/CartModal\"\nimport Result from \"./pages/Result\"\n\nconst stripeKey = 'pk_test_51JEYLzI5axcIykJko2VXlodil22iVSjZ58IFvODU039VdHUKC9MxGLPLfZP9dn1aagi131H5BDoNOJsKuj2AvgJj00KNnHunqn'\n\nfunction App() {\n\n  const { isModalOpen } = useContext(ModalContext)\n\n  return (\n    <div className=\"App\">\n\n      <CartProvider \n        mode=\"checkout-session\"\n        stripe={stripeKey}\n        currency=\"AUD\"\n        // cartMode=\"client-only\"\n        >\n        \n        {isModalOpen && <CartModal /> }\n        <Navbar /> \n        <main>\n        <Marquee \n          style={{\n            height: \"2em\",\n            fontStyle: \"italic\",\n            fontSize: \"2em\",\n            zIndex: 0\n            }}\n          speed=\"50\"\n          gradient={false}\n        >\n           FREE SHIPPING ON ORDERS OVER $100!\n        </Marquee>\n          <Switch>\n            <Route exact path=\"/\">\n              <Shop />\n            </Route>\n            <Route path=\"/shop/:item\">\n              <Product />\n            </Route>\n            <Route path=\"/shop\">\n              <Shop />\n            </Route>\n            <Route path=\"/result\">\n              <Result />\n            </Route>\n          </Switch>\n        </main>\n        </CartProvider>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { QueryClientProvider, QueryClient } from  \"react-query\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ModalProvider } from './ModalContext';\nimport { ProductsProvider } from './ProductsContext';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <Router>\n      <ChakraProvider>\n          <ModalProvider>\n            <ProductsProvider>\n            <App />\n            </ProductsProvider>\n          </ModalProvider>\n        </ChakraProvider>\n      </Router>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}